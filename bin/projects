#!/usr/bin/env ruby
require "rubygems"
require "grit"
require "term/ansicolor"

class String
  include Term::ANSIColor
end

dirs = Dir["/Users/bhelmkamp/p/active/*"]
dirs = dirs.select do |dir|
  File.directory?(dir)
end

excludes = %w[rails rr rspec]

module VersionSorter
  extend self

  def sort(list)
    list.sort_by {|x| normalize(x)}
  end

private

  def normalize(version)
    version.to_s.scan(%r/\d+/o).map{|d| d.to_i}
  end
end

module RemoteTags
  extend self

  def tags
    tags = {}

    lines = `git ls-remote -t origin v*{}`
    lines.each do |line|
      sha, tag = line.split(/\s+/)
      tag.gsub!(/\^\{\}/, '').gsub!(/refs\/tags\//, '')
      tags[tag] = sha
    end
    return tags
  end
end

dirs.each do |dir|
  Dir.chdir(dir) do
    next unless File.exist?(".git")

    name = File.basename(dir)
    next if excludes.include?(name)

    repo = Grit::Repo.new(dir)

    tags          = RemoteTags.tags
    latest_tag    = VersionSorter.sort(tags.keys).last
    latest_commit = repo.get_head("master").commit.id

    if latest_commit == tags[latest_tag]
      status = "up-to-date".green
    else
      status = "needs release".red
    end

    puts sprintf("%-15s%s", name, status)
  end
end